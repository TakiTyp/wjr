<?php

/**
 * WjrArticleTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class WjrArticleTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object WjrArticleTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('WjrArticle');
    }
	
	// funkcja definiuje zapytanie o kolekcje artykulow razem z nazwa kategorii
	// lub wykonuje zapytanie i zwraca pierwszy rekord z kolekcji;
	// $id - id artykulu; domyslnie $id = null i pobiera wszystkie;
	// app_max_articles zdefiniowane w apps/frontend/config/app.yml
	// leftJoin laczy tabele pod wzgledem relacji miedzy tabelami
	// (nie trzeba wskazywac na relacje - pominiecie klauzury ON);
	// odniesienie do nazwy kategorii przez nawias klamrowy i alias
	// np. $artykuly[index]['c_name'];
	public function getArticles($id = null)
	{
		$q = Doctrine_Query::create()
		  ->select('a.*, c.name AS c_name')
		  ->from('WjrArticle a')
		  ->where('a.is_activated = ?', 1)
		  ->leftJoin('a.WjrCategory c')
		  ->orderBy('a.created_at DESC')
		  ->limit(sfConfig::get('app_max_articles'));
		
		if (!is_null($id))
		{
			$q->andWhere('a.id = ?', $id);
			// getFirst() zwraca pierwszy rekord z kolekcji;
			// nawet pomimo braku $id kolekcja nigdy nie jest pusta!
			// ale wtedy dzieki getFirst() zwraca pusty obiekt;
			return $q->execute()->getFirst();
		}
		
		return $q;
	}
	
	// dla apps/backend/modules/article/config/generator.yml
	// zmiejsza liczbe zapytan o kategorie, tworzy obiekt kategorii
	public function retrieveBackendArticleList(Doctrine_Query $q)
	{
	  $rootAlias = $q->getRootAlias();
	 
	  $q->leftJoin($rootAlias . '.WjrCategory c');
	 
	  return $q;
	}
}